Raspberry Pi supports various communication protocols such as UART, I2C, and SPI which are necessary for interacting with BMS hardware. It also has General-Purpose Input-Output pins that enables interfacing with external hardwares, such as sensors, controllers, and BMS components. Versatile & Compatible.

We chose Python as our language because it'll be our first hands on Raspberry Pi experience and we would like to select a language that's simple to use and devoid of possible hardships that will likely to arise. Additionally, Python has an extensive robust libraries for communication such as pyserial, SMBus, and python-can, which facilitate these protocols. (Ease of Development)

Raspberry Pi: 

Versatile & Compatible
Raspberry Pi supports various communication protocols such as UART, I2C, and SPI which are necessary for interacting with BMS hardware. It also has General-Purpose Input-Output pins that enables interfacing with external hardwares, such as sensors, controllers, and BMS components.

Ease of Development
Raspberry Pi runs on a Linux-based OS (such as Raspberry Pi OS) and supports Python, making it easy to develop, test, and deploy applications.
Its wide support for libraries such as pyserial, python-can, and sqlite3 enables the team to efficiently handle communication, data processing, and storage.

Energy Efficiency
The Raspberry Pi consumes relatively low power, which aligns well with the renewable energy focus of the project, ensuring the system remains energy-efficient.

Networking and IoT Capabilities
Built-in Ethernet and Wi-Fi support allow for potential remote monitoring and data transfer capabilities, which could enhance the project's usability and scalability.

Proven Use in Similar Applications
Raspberry Pi has been successfully used in many projects involving battery management, renewable energy systems, and IoT applications, making it a reliable choice.





